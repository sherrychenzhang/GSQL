CREATE QUERY Solution1(DATETIME YYYY) FOR GRAPH CrunchBasePre_2013 { 
     /*
 DISCLAIMER: Data is from Crunchbase 2013 Snapshot under the Creative Commons Attribution License [CC-BY].

 Find the top 1 university which has the largest number of alumni who invested or worked for a company that
went to IPO in year YYYY.

 Step:
    (1) find all companies that went to IPO in the given year.
    (2) find employees who worked/invested the companies in step(1).
    (3) calculator the number of alumni got in step(2) for each univeristy and get the largest number.
    (4) select the univeristy with the largest number of alumni
   

    Path:
     IPo-> company -> person -> univeristy
*/
 

  TYPEDEF TUPLE<STRING name, INT counts> tmost;
  SumAccum<int> @num;
  HeapAccum<tmost>(1, counts DESC) @@topOne;
  String resName;
  DATETIME none;
  
  none = to_datetime("1970-01-01 00:00:00");
 
  ipos = {IPO.*};
  //1.find all companies that went to IPO in the given year.
  company1 = select t from ipos:i -(company_ipo:e)-company:t where
  year(i.public_at) == year(YYYY);
 
  //2.find employees who worked/invested the companies in company1
  ep = select t from company1:s-((work_for_company|invested_by_person):e) - person:t
      WHERE  e.type == "invested_by_person" OR (e.type == "work_for_company" AND datetime_diff(e.start_at,none) != 0 AND datetime_diff(e.end_at,none) != 0);
             
 
  //3.calculator the number of alumni got in step(2) for each univeristy and get the largest number.
  universities = SELECT t from ep:s -(hasDegree:e)-university:t
  ACCUM t.@num += 1
  POST-ACCUM @@topOne += tmost(t.name, t.@num);
 
  //4.select the univeristy with the largest number of alumni
  resName = @@topOne.top().name;
   
  PRINT resName;
 
}